{"version":3,"sources":["components/types.model.ts","components/UI/GridsAndCards.tsx","utils/getWeb3.js","utils/getContractInstance.ts","components/App/App.tsx","components/App/AppRouter.tsx","components/App/AppRender.tsx","components/App/PageRouter.tsx","components/Forms/ContractForm.tsx","components/Forms/SearchContracts.tsx","components/Forms/TeamForm.tsx","components/Pages/ContractPage.tsx","components/Pages/contractPageHooks.tsx","components/Pages/HomePage.tsx","components/UI/AppContainer.tsx","components/UI/AppLoadingError.tsx","components/UI/FormSpacer.tsx","components/UI/Leaderboard.tsx","components/UI/ContractCard.tsx","components/UI/ThemeWrapper.tsx","components/UI/InlineTypography.tsx","components/UI/LoadManagersButton.tsx","components/Inputs/SelectContractType.tsx","components/Forms/SelectWeeklyWinner.tsx","components/Forms/SelectSeasonWinner.tsx","index.js"],"names":["ContractType","SeasonContract","WeeklyContract","TeamProperties","MaxAmounts","CardWrapper","children","Card","variant","style","maxWidth","minWidth","padding","margin","CardContent","GridItem","Grid","item","xs","lg","container","justify","direction","alignItems","GridCardItem","OneGrid","spacing","TwoGrid","FourOhFour","display","flexDirection","Typography","Button","color","marginTop","to","textDecoration","ContractLoadingCard","LinearProgress","width","getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","isDefined","arg","getContractInstance","artifact","contractAddress","abi","eth","Contract","App","state","undefined","accounts","factoryContract","loaded","loading","componentDidMount","setState","getAccounts","net","getId","networkId","deployedNetwork","LeagueFactoryJSON","networks","instance","address","error","this","length","AppLoadingError","React","Component","useStyles","makeStyles","theme","createStyles","root","breakpoints","down","justifyContent","palette","primary","main","fontTheme","createMuiTheme","typography","fontFamily","Header","styles","ThemeProvider","className","paddingLeft","fontSize","AppRouter","props","AppRender","AppContainer","PageRouter","exact","path","handleSubmit","values","actions","contractType","setSubmitting","minBuyInWeiString","utils","toWei","MinBuyInWei","toString","Season","percents","Math","round","FirstPercent","SecondPercent","ThirdPercent","FourthPercent","reduce","acc","curr","setStatus","message","methods","createSeasonLeague","YahooLeagueId","TeamLimit","send","from","resetForm","Weekly","createWeeklyLeague","TotalWeeks","withFormik","mapPropsToValues","initialYahooId","initialMinBuyInWei","initialTeamLimit","initialTotalWeeks","NumAwards","initialNumAwards","initialFirstPercent","initialSecondPercent","initialThirdPercent","initialFourthPercent","validationSchema","object","shape","number","required","positive","integer","max","handleChange","errors","touched","setFieldTouched","isSubmitting","useState","alotOfEthWarning","toggleAlotOfEthWarning","formColor","onSubmit","TextField","onBlur","label","onChange","type","name","value","helperText","fullWidth","InputLabelProps","shrink","evt","amount","parseInt","target","inputProps","FormControl","InputLabel","id","Select","autoWidth","map","val","MenuItem","key","min","step","status","disabled","isValidContractAddress","yahooId","all","seasonLeagues","call","weeklyLeagues","season","weekly","seasonIsValid","weeklyIsValid","setContracts","setLeagueId","setFieldError","validate","hasError","marginLeft","contract","inEther","BuyInAmount","inWei","addTeam","TeamId","initialTeamId","initialBuyInAmount","contractColor","ContractPage","hasTried","setHasTried","managers","setManagers","useEffect","events","TeamInfo","on","returnValues","amountPaidInWei","amountWonInWei","teamId","prev","mountTeamEventListener","useManagerList","estimatedGas","setEstimatedGas","getAllTeams","estimateGas","estimate","getGas","useGasEstimation","maxTeams","setMaxTeams","currentTeams","setCurrentTeams","minBuyInWei","setMinBuyInWei","commish","setCommish","yahooLeagueId","setYahooLeagueId","comm","lid","minBuyInEth","fromWei","Number","getContractInfo","useContractInfo","isWeekly","totalWeeks","setTotalWeeks","currentWeek","setCurrentWeek","getWeeklyContractInfo","tw","cw","useWeeklyContractInfo","numAwards","setNumAwards","isSeasonDone","setIsSeasonDone","getSeasonContractInfo","nw","isd","useSeasonContractInfo","isCommish","remainingTeamsAvailable","getManagers","gasPrice","InlineTypography","handleClick","TeamForm","SelectWeeklyWinner","ContractPageWrapper","useParams","SeasonLeagueJSON","WeeklyLeagueJSON","setContract","HomePage","contracts","setContractType","leagueId","setValue","backgroundImage","backgroundRepeat","backgroundSize","minHeight","AppWrapper","Container","fixed","backgroundColor","LoadingError","Link","rel","href","FormSpacer","paddingRight","Leaderboard","List","m","i","amountWon","amountPaid","diff","isPos","fixedDiff","toFixed","ListItem","borderBottom","ListItemIcon","Avatar","ListItemText","component","secondary","ContractCard","isSeasonContract","noWrap","darkTheme","MuiButtonBase","disableRipple","disableTouchRipple","ThemeWrapper","CssBaseline","CardPageInlineTypography","LoadManagersButton","onClick","SelectContractType","useTheme","htmlFor","RadioGroup","aria-label","event","row","FormControlLabel","labelPlacement","control","Radio","payOutWeek","string","submitForm","manager","payOutSeason","FirstPlace","SecondPlace","ThirdPlace","FourthPlace","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84bdb17e.chunk.js","sourcesContent":["import Web3 from \"web3\";\nimport { LeagueFactory } from \"../../types/web3-v1-contracts/LeagueFactory\";\nimport { WeeklyLeague } from \"../../types/web3-v1-contracts/WeeklyLeague\";\nimport { SeasonLeague } from \"../../types/web3-v1-contracts/SeasonLeague\";\nimport { Contract } from \"web3-eth-contract\";\n\nexport type NetworkId = \"1\" | \"3\" | \"5\" | \"5777\";\n\n// export type SeasonLeagueInstance = Pick<SeasonLeague, \"methods\" | \"events\">;\nexport interface SeasonLeagueInstance extends Contract {\n  methods: SeasonLeague[\"methods\"];\n  events: SeasonLeague[\"events\"];\n}\n\nexport interface WeeklyLeagueInstance extends Contract {\n  methods: WeeklyLeague[\"methods\"];\n  events: WeeklyLeague[\"events\"];\n}\n\nexport interface LeagueFactoryInstance extends Contract {\n  methods: LeagueFactory[\"methods\"];\n  events: LeagueFactory[\"events\"];\n}\n\nexport interface Web3FactoryAccounts {\n  web3: Web3;\n  accounts: string[];\n  factoryContract: LeagueFactoryInstance;\n  // networkId: NetworkId;\n}\n\nexport interface Web3ContractAccounts extends Web3FactoryAccounts {\n  contract: SeasonLeagueInstance | WeeklyLeagueInstance;\n}\n\nexport interface EthNetworks {\n  [k: number]: {\n    events: {};\n    links: {};\n    address: string;\n    transactionHash: string;\n  };\n}\n\nexport function isDefined<T>(arg: T | undefined): arg is T {\n  return typeof arg !== \"undefined\";\n}\n\nexport enum ContractType {\n  Season = \"season\",\n  Weekly = \"weekly\",\n}\n\nexport enum SeasonContract {\n  YahooLeagueId = \"_yahooLeagueId\",\n  MinBuyInWei = \"_minBuyInWei\",\n  TeamLimit = \"_teamLimit\",\n  NumAwards = \"_numAwards\",\n  FirstPercent = \"_firstPercent\",\n  SecondPercent = \"_secondPercent\",\n  ThirdPercent = \"_thirdPercent\",\n  FourthPercent = \"_fourthPercent\",\n}\n\nexport enum WeeklyContract {\n  YahooLeagueId = \"_yahooLeagueId\",\n  MinBuyInWei = \"_minBuyInWei\",\n  TeamLimit = \"_teamLimit\",\n  TotalWeeks = \"_totalWeeks\",\n}\n\nexport enum TeamProperties {\n  TeamId = \"_teamId\",\n  BuyInAmount = \"_buyInAmount\",\n  FirstPlace = \"_firstPlace\",\n  SecondPlace = \"_secondPlace\",\n  ThirdPlace = \"_thirdPlace\",\n  FourthPlace = \"_fourthPlace\",\n}\n\nexport enum MaxAmounts {\n  TeamLimit = 20,\n  TotalWeeks = 16,\n}\n\nexport interface TeamInfo {\n  amountPaidInWei: string;\n  amountWonInWei: string;\n  teamId: string;\n}\n\nexport type Colors = \"primary\" | \"secondary\";\n\n// Season args\n// int256 _yahooLeagueId,\n// uint256 _minBuyInWei,\n// uint256 _teamLimit\n\n// Weekly args\n// uint256 _yahooLeagueId,\n// uint256 _minBuyInWei,\n// uint8 _totalWeeks,\n// uint256 _teamLimit\n\n// todo - Not sure if we will need these\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Colors } from \"../types.model\";\nimport {\n  Grid,\n  Card,\n  CardContent,\n  LinearProgress,\n  Typography,\n  Button,\n} from \"@material-ui/core\";\n\nexport const CardWrapper: React.FC = ({ children }) => {\n  return (\n    <Card\n      variant=\"outlined\"\n      style={{\n        maxWidth: \"400px\",\n        minWidth: \"400px\", // about how long a contract address is\n        padding: \"0px 24px\",\n        margin: \"8px 0px\",\n      }}\n    >\n      <CardContent>{children}</CardContent>\n    </Card>\n  );\n};\n\nexport const GridItem: React.FC = ({ children }) => {\n  return (\n    <Grid\n      item\n      xs={12}\n      lg={6}\n      container\n      justify=\"flex-start\"\n      direction=\"column\"\n      alignItems=\"center\"\n    >\n      {children}\n    </Grid>\n  );\n};\n\nexport const GridCardItem: React.FC = ({ children }) => {\n  return (\n    <GridItem>\n      <CardWrapper>{children}</CardWrapper>\n    </GridItem>\n  );\n};\n\nexport const OneGrid: React.FC = ({ children }) => {\n  return (\n    <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\n      {children}\n    </Grid>\n  );\n};\n\nexport const TwoGrid: React.FC = ({ children }) => {\n  return (\n    <Grid container spacing={3}>\n      {children}\n    </Grid>\n  );\n};\n\nexport const FourOhFour: React.FC = () => (\n  <OneGrid>\n    <GridItem>\n      <Card>\n        <CardContent\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n\n            padding: \"32px\",\n          }}\n        >\n          <Typography variant=\"h6\">You are lost.</Typography>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginTop: \"16px\" }}\n          >\n            <Link to={`/`} style={{ textDecoration: \"none\", color: \"white\" }}>\n              Go Home\n            </Link>\n          </Button>\n        </CardContent>\n      </Card>\n    </GridItem>\n  </OneGrid>\n);\n\nexport const ContractLoadingCard: React.FC<{\n  color?: Colors;\n}> = ({ color = \"primary\" }) => {\n  return (\n    <OneGrid>\n      <GridItem>\n        <Card>\n          <CardContent>\n            <LinearProgress\n              style={{ width: \"400px\", margin: \"8px 0 0 0\" }}\n              color={color}\n            />\n          </CardContent>\n        </Card>\n      </GridItem>\n    </OneGrid>\n  );\n};\n\nexport default GridCardItem;\n","import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import Web3 from \"web3/types\";\nimport { AbiItem } from \"web3-utils\";\n\nexport function getContractInstance(\n  web3: Web3,\n  artifact: any,\n  contractAddress: string\n) {\n  const abi: AbiItem[] = artifact.abi as AbiItem[];\n  return new web3.eth.Contract(abi, contractAddress);\n}\n","import React from \"react\";\nimport getWeb3 from \"../../utils/getWeb3\";\nimport { AppLoadingError, PageRouter, ContractLoadingCard } from \"../index\";\nimport LeagueFactoryJSON from \"../../contracts/LeagueFactory.json\";\nimport Web3 from \"web3/types\";\nimport { LeagueFactoryInstance, EthNetworks, isDefined } from \"../types.model\";\nimport { getContractInstance } from \"../../utils/getContractInstance\";\n\ntype MyProps = {};\ntype AppState = {\n  web3: undefined | Web3;\n  factoryContract: undefined | LeagueFactoryInstance;\n  accounts: string[];\n  loaded: boolean;\n  loading: boolean;\n};\n\nclass App extends React.Component<MyProps, AppState> {\n  state: AppState = {\n    web3: undefined,\n    accounts: [],\n    factoryContract: undefined,\n    loaded: false,\n    loading: false,\n  };\n\n  componentDidMount = async () => {\n    this.setState({ loading: true });\n    try {\n      const web3: Web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();\n\n      // console.log(\"accounts\", accounts);\n      let networkId: number = await web3.eth.net.getId();\n      // console.log(\"networkId\", networkId);\n\n      if (typeof networkId === \"number\") {\n        const deployedNetwork = (LeagueFactoryJSON.networks as EthNetworks)[\n          networkId\n        ];\n        const instance = getContractInstance(\n          web3,\n          LeagueFactoryJSON,\n          deployedNetwork.address\n        );\n\n        this.setState({\n          web3,\n          accounts,\n          factoryContract: instance,\n          loaded: true,\n        });\n      } else {\n        console.error(\"Contract migration failure\");\n        this.setState({ loaded: false });\n      }\n    } catch (error) {\n      this.setState({ loaded: false });\n      console.error(error);\n    }\n    this.setState({ loading: false });\n  };\n\n  render() {\n    const { loading, loaded, web3, accounts, factoryContract } = this.state;\n    if (loading) {\n      return <ContractLoadingCard />;\n    }\n\n    if (!loading && !loaded) {\n      return <AppLoadingError />;\n    }\n\n    if (\n      isDefined<Web3>(web3) &&\n      isDefined(factoryContract) &&\n      accounts.length > 0\n    ) {\n      return (\n        <PageRouter\n          web3={web3}\n          factoryContract={factoryContract}\n          accounts={accounts}\n        />\n      );\n    }\n\n    return <AppLoadingError />;\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport { HashRouter, Link } from \"react-router-dom\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { Theme, makeStyles, createStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return createStyles({\n    root: {\n      [theme.breakpoints.down(\"md\")]: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      },\n      color: theme.palette.primary.main,\n    },\n  });\n});\n\nconst fontTheme = createMuiTheme({\n  typography: {\n    fontFamily: \"Bebas Neue\",\n  },\n});\n\nconst Header: React.FC = () => {\n  const styles = useStyles();\n  return (\n    <ThemeProvider theme={fontTheme}>\n      <div>\n        <Link\n          to={`/`}\n          className={styles.root}\n          style={{\n            textDecoration: \"none\",\n            margin: 0,\n            paddingLeft: \"22px\",\n            fontFamily: \"Bebas Neue\",\n            fontSize: \"64px\",\n          }}\n        >\n          Commish\n        </Link>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nconst AppRouter: React.FC = (props) => {\n  return (\n    <HashRouter>\n      <Header />\n      {props.children}\n    </HashRouter>\n  );\n};\n\nexport default AppRouter;\n","import React from \"react\";\nimport { ThemeWrapper, AppContainer, AppRouter, App } from \"../index\";\n\nconst AppRender: React.FC = (props) => {\n  return (\n    <ThemeWrapper>\n      <AppContainer>\n        <AppRouter>\n          <App />\n        </AppRouter>\n      </AppContainer>\n    </ThemeWrapper>\n  );\n};\n\nexport default AppRender;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { HomePage, ContractPage, FourOhFour } from \"../index\";\nimport { Web3FactoryAccounts } from \"../types.model\";\n\nconst PageRouter: React.FC<Web3FactoryAccounts> = (props) => {\n  return (\n    <Switch>\n      <Route exact path=\"/contract/:contractType/:contractAddress\">\n        <ContractPage {...props} />\n      </Route>\n      <Route exact path=\"/\">\n        <HomePage {...props} />\n      </Route>\n      <Route>\n        <FourOhFour />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default PageRouter;\n","import React, { useState } from \"react\";\nimport {\n  ContractType,\n  WeeklyContract,\n  SeasonContract,\n  MaxAmounts,\n} from \"../types.model\";\nimport {\n  IContractFormActions,\n  IContractFormValues,\n  IContractForm,\n} from \"./ContractForm.model\";\nimport { FormSpacer } from \"../index\";\nimport { withFormik, FormikProps } from \"formik\";\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  Button,\n  TextField,\n  MenuItem,\n  Typography,\n} from \"@material-ui/core\";\nimport { object, number } from \"yup\";\n\nconst handleSubmit = async (\n  values: IContractFormValues,\n  actions: IContractFormActions\n) => {\n  const { contractType, factoryContract, accounts, web3 } = actions.props;\n  actions.setSubmitting(true);\n\n  const minBuyInWeiString = web3.utils.toWei(\n    values[WeeklyContract.MinBuyInWei].toString(),\n    \"ether\"\n  );\n\n  if (contractType === ContractType.Season) {\n    const percents = [\n      Math.round(values[SeasonContract.FirstPercent] * 100),\n      Math.round(values[SeasonContract.SecondPercent] * 100),\n      Math.round(values[SeasonContract.ThirdPercent] * 100),\n      Math.round(values[SeasonContract.FourthPercent] * 100),\n    ];\n\n    const percentSum = percents.reduce(\n      (acc: number, curr: number) => (acc += curr),\n      0\n    );\n\n    if (percentSum !== 10000) {\n      actions.setStatus({ message: \"Must equal 100%\" });\n      return;\n    }\n\n    try {\n      await factoryContract.methods\n        .createSeasonLeague(\n          values[SeasonContract.YahooLeagueId],\n          minBuyInWeiString,\n          values[SeasonContract.TeamLimit],\n          percents\n        )\n        .send({\n          from: accounts[0],\n        });\n      actions.setStatus(undefined);\n      actions.resetForm();\n    } catch (error) {\n      actions.setStatus(error);\n    }\n  }\n\n  if (contractType === ContractType.Weekly) {\n    try {\n      await factoryContract.methods\n        .createWeeklyLeague(\n          values[WeeklyContract.YahooLeagueId],\n          minBuyInWeiString,\n          values[WeeklyContract.TeamLimit],\n          values[WeeklyContract.TotalWeeks]\n        )\n        .send({\n          from: accounts[0],\n        });\n      actions.setStatus(undefined);\n      actions.resetForm();\n    } catch (error) {\n      actions.setStatus(error);\n    }\n  }\n\n  actions.setSubmitting(false);\n};\n\nconst ContractForm = (\n  props: IContractForm & FormikProps<IContractFormValues>\n) => {\n  const {\n    handleChange,\n    handleSubmit,\n    values,\n    contractType,\n    errors,\n    touched,\n    setFieldTouched,\n    isSubmitting,\n  } = props;\n  const [alotOfEthWarning, toggleAlotOfEthWarning] = useState(false);\n\n  const formColor =\n    contractType === ContractType.Season ? \"primary\" : \"secondary\";\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormSpacer>\n        <TextField\n          color={formColor}\n          onBlur={() => setFieldTouched(WeeklyContract.YahooLeagueId)}\n          label=\"Yahoo League Id\"\n          onChange={handleChange}\n          type=\"number\"\n          name={WeeklyContract.YahooLeagueId}\n          value={values[WeeklyContract.YahooLeagueId]}\n          error={\n            touched[WeeklyContract.YahooLeagueId] &&\n            typeof errors[WeeklyContract.YahooLeagueId] === \"string\"\n          }\n          helperText={\n            touched[WeeklyContract.YahooLeagueId] &&\n            errors[WeeklyContract.YahooLeagueId]\n          }\n          fullWidth\n          InputLabelProps={{ shrink: true }}\n        />\n      </FormSpacer>\n      <FormSpacer>\n        <TextField\n          label=\"Min Buy In (Ether)\"\n          onChange={(evt) => {\n            const amount = parseInt(evt.target.value, 10);\n            if (amount > 10) {\n              toggleAlotOfEthWarning(true);\n            } else {\n              toggleAlotOfEthWarning(false);\n            }\n            return handleChange(evt);\n          }}\n          color={formColor}\n          type=\"number\"\n          onBlur={() => setFieldTouched(WeeklyContract.MinBuyInWei)}\n          name={WeeklyContract.MinBuyInWei}\n          value={values[WeeklyContract.MinBuyInWei]}\n          error={\n            touched[WeeklyContract.MinBuyInWei] &&\n            typeof errors[WeeklyContract.MinBuyInWei] === \"string\"\n          }\n          helperText={\n            touched[WeeklyContract.MinBuyInWei] &&\n            errors[WeeklyContract.MinBuyInWei]\n          }\n          InputLabelProps={{ shrink: true }}\n          fullWidth\n        />\n        {alotOfEthWarning && (\n          <Typography variant=\"caption\" color=\"error\">\n            This is a lot of Ether...\n          </Typography>\n        )}\n      </FormSpacer>\n      <FormSpacer>\n        <TextField\n          label=\"Num Teams\"\n          type=\"number\"\n          color={formColor}\n          onChange={handleChange}\n          onBlur={() => setFieldTouched(WeeklyContract.TeamLimit)}\n          value={values[WeeklyContract.TeamLimit]}\n          name={WeeklyContract.TeamLimit}\n          error={\n            touched[WeeklyContract.TeamLimit] &&\n            typeof errors[WeeklyContract.TeamLimit] === \"string\"\n          }\n          helperText={\n            touched[WeeklyContract.TeamLimit] &&\n            errors[WeeklyContract.TeamLimit]\n          }\n          InputLabelProps={{ shrink: true }}\n          inputProps={{\n            max: MaxAmounts.TeamLimit,\n          }}\n          fullWidth\n        />\n      </FormSpacer>\n      {contractType === ContractType.Weekly && (\n        <FormSpacer>\n          <TextField\n            color=\"secondary\"\n            label=\"Num Weeks\"\n            onChange={handleChange}\n            type=\"number\"\n            onBlur={() => setFieldTouched(WeeklyContract.TotalWeeks)}\n            name={WeeklyContract.TotalWeeks}\n            value={values[WeeklyContract.TotalWeeks]}\n            error={\n              touched[WeeklyContract.TotalWeeks] &&\n              typeof errors[WeeklyContract.TotalWeeks] === \"string\"\n            }\n            helperText={errors[WeeklyContract.TotalWeeks]}\n            InputLabelProps={{ shrink: true }}\n            inputProps={{\n              max: MaxAmounts.TotalWeeks,\n            }}\n            fullWidth\n          />\n        </FormSpacer>\n      )}\n      {contractType === ContractType.Season && (\n        <>\n          <FormSpacer>\n            <FormControl fullWidth>\n              <InputLabel color=\"primary\" id=\"num-awards\">\n                Number of Winners to Pay Out\n              </InputLabel>\n              <Select\n                id=\"num-awards\"\n                color=\"primary\"\n                autoWidth\n                name={SeasonContract.NumAwards}\n                value={values[SeasonContract.NumAwards]}\n                onChange={handleChange}\n              >\n                {[1, 2, 3, 4].map((val) => {\n                  return (\n                    <MenuItem key={val} value={val}>\n                      {val}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </FormControl>\n          </FormSpacer>\n          <FormSpacer>\n            <TextField\n              color=\"primary\"\n              type=\"number\"\n              InputLabelProps={{ shrink: true }}\n              onBlur={() => setFieldTouched(SeasonContract.FirstPercent)}\n              onChange={handleChange}\n              name={SeasonContract.FirstPercent}\n              label=\"First Place %\"\n              value={values[SeasonContract.FirstPercent]}\n              error={\n                touched[SeasonContract.FirstPercent] &&\n                typeof errors[SeasonContract.FirstPercent] === \"string\"\n              }\n              helperText={\n                touched[SeasonContract.FirstPercent] &&\n                errors[SeasonContract.FirstPercent]\n              }\n              inputProps={{\n                max: 100,\n                min: 0,\n                step: \"any\",\n              }}\n              fullWidth\n            />\n          </FormSpacer>\n          {values[SeasonContract.NumAwards] > 1 && (\n            <FormSpacer>\n              <TextField\n                color=\"primary\"\n                type=\"number\"\n                InputLabelProps={{ shrink: true }}\n                onBlur={() => setFieldTouched(SeasonContract.SecondPercent)}\n                onChange={handleChange}\n                name={SeasonContract.SecondPercent}\n                label=\"Second Place %\"\n                value={values[SeasonContract.SecondPercent]}\n                error={\n                  touched[SeasonContract.SecondPercent] &&\n                  typeof errors[SeasonContract.SecondPercent] === \"string\"\n                }\n                helperText={errors[SeasonContract.SecondPercent]}\n                inputProps={{\n                  max: 100,\n                  min: 0,\n                  step: \"any\",\n                }}\n                fullWidth\n              />\n            </FormSpacer>\n          )}\n          {values[SeasonContract.NumAwards] > 2 && (\n            <FormSpacer>\n              <TextField\n                color=\"primary\"\n                type=\"number\"\n                InputLabelProps={{ shrink: true }}\n                onBlur={() => setFieldTouched(SeasonContract.ThirdPercent)}\n                onChange={handleChange}\n                name={SeasonContract.ThirdPercent}\n                label=\"Third Place %\"\n                value={values[SeasonContract.ThirdPercent]}\n                error={\n                  touched[SeasonContract.ThirdPercent] &&\n                  typeof errors[SeasonContract.ThirdPercent] === \"string\"\n                }\n                helperText={errors[SeasonContract.ThirdPercent]}\n                inputProps={{\n                  max: 100,\n                  min: 0,\n                  step: \"any\",\n                }}\n                fullWidth\n              />\n            </FormSpacer>\n          )}\n          {values[SeasonContract.NumAwards] > 3 && (\n            <FormSpacer>\n              <TextField\n                color=\"primary\"\n                type=\"number\"\n                InputLabelProps={{ shrink: true }}\n                onBlur={() => setFieldTouched(SeasonContract.FourthPercent)}\n                onChange={handleChange}\n                name={SeasonContract.FourthPercent}\n                label=\"Fourth Place %\"\n                value={values[SeasonContract.FourthPercent]}\n                error={\n                  touched[SeasonContract.FourthPercent] &&\n                  typeof errors[SeasonContract.FourthPercent] === \"string\"\n                }\n                helperText={errors[SeasonContract.FourthPercent]}\n                inputProps={{\n                  max: 100,\n                  min: 0,\n                  step: \"any\",\n                }}\n                fullWidth\n              />\n            </FormSpacer>\n          )}\n        </>\n      )}\n      {props.status !== undefined && (\n        <Typography color=\"error\">\n          {props.status.message || \"Please try again.\"}\n        </Typography>\n      )}\n      <FormSpacer>\n        <Button\n          type=\"submit\"\n          color={contractType === ContractType.Season ? \"primary\" : \"secondary\"}\n          variant=\"contained\"\n          disabled={isSubmitting}\n        >\n          Submit\n        </Button>\n      </FormSpacer>\n    </form>\n  );\n};\n\nexport default withFormik<IContractForm, IContractFormValues>({\n  mapPropsToValues: (props) => {\n    return {\n      [WeeklyContract.YahooLeagueId]: props.initialYahooId || 0,\n      [WeeklyContract.MinBuyInWei]: props.initialMinBuyInWei || 0,\n      [WeeklyContract.TeamLimit]: props.initialTeamLimit || 0,\n      [WeeklyContract.TotalWeeks]: props.initialTotalWeeks || 0,\n      [SeasonContract.NumAwards]: props.initialNumAwards || 1,\n      [SeasonContract.FirstPercent]: props.initialFirstPercent || 100,\n      [SeasonContract.SecondPercent]: props.initialSecondPercent || 0,\n      [SeasonContract.ThirdPercent]: props.initialThirdPercent || 0,\n      [SeasonContract.FourthPercent]: props.initialFourthPercent || 0,\n    };\n  },\n  validationSchema: ({ contractType }: IContractForm) => {\n    return object().shape({\n      [WeeklyContract.YahooLeagueId]: number()\n        .required(\"Required\")\n        .positive()\n        .integer(\"Your league id does not have a decimal\"),\n      [WeeklyContract.MinBuyInWei]: number()\n        .required(\"Required\")\n        .positive(),\n      [WeeklyContract.TeamLimit]: number()\n        .required(\"Required\")\n        .positive()\n        .max(20, \"Your league is not that big\"),\n      [WeeklyContract.TotalWeeks]:\n        contractType === ContractType.Weekly\n          ? number()\n              .required()\n              .positive()\n              .integer()\n              .max(16, \"It's a 16 week season...\")\n          : number(),\n      [SeasonContract.FirstPercent]:\n        contractType === ContractType.Season\n          ? number()\n              .required()\n              .positive()\n              .max(100, \"They can't have more than 100% of pot\")\n          : number(),\n    });\n  },\n  handleSubmit,\n})(ContractForm);\n","import React from \"react\";\nimport { FormikProps, withFormik } from \"formik\";\nimport { WeeklyContract } from \"../types.model\";\nimport {\n  ISearchContractsActions,\n  ISearchContractsValues,\n  ISearchContracts,\n} from \"./SearchContracts.model\";\nimport { TextField, Button, Typography } from \"@material-ui/core\";\n\nconst isValidContractAddress = (address: string): boolean => {\n  // && valid address check here? checksum?\n  return address !== \"0x0000000000000000000000000000000000000000\";\n};\n\nconst handleSubmit = async (\n  values: ISearchContractsValues,\n  actions: ISearchContractsActions\n) => {\n  actions.setSubmitting(true);\n\n  const yahooId = values[WeeklyContract.YahooLeagueId];\n\n  try {\n    const [season, weekly] = await Promise.all([\n      actions.props.factoryContract.methods.seasonLeagues(yahooId).call(),\n      actions.props.factoryContract.methods.weeklyLeagues(yahooId).call(),\n    ]);\n\n    const seasonIsValid = isValidContractAddress(season);\n    const weeklyIsValid = isValidContractAddress(weekly);\n\n    if (seasonIsValid || weeklyIsValid) {\n      actions.props.setContracts(() => ({\n        weekly: weeklyIsValid ? weekly : null,\n        season: seasonIsValid ? season : null,\n      }));\n      actions.props.setLeagueId(yahooId);\n    }\n\n    if (!seasonIsValid && !weeklyIsValid) {\n      actions.setFieldError(WeeklyContract.YahooLeagueId, \"No contract found\");\n      actions.props.setContracts(() => ({ season: null, weekly: null }));\n    }\n    actions.setStatus(undefined);\n  } catch (error) {\n    actions.setStatus(error);\n  }\n\n  actions.setSubmitting(false);\n};\n\nconst SearchContracts = (\n  props: ISearchContracts & FormikProps<ISearchContractsValues>\n) => {\n  const { handleChange, handleSubmit, values, errors, isSubmitting } = props;\n\n  const hasError =\n    !isSubmitting && typeof errors[WeeklyContract.YahooLeagueId] === \"string\";\n\n  return (\n    <>\n      <form\n        onSubmit={handleSubmit}\n        style={{ display: \"flex\", alignItems: \"baseline\" }}\n      >\n        <TextField\n          label=\"Yahoo League Id\"\n          onChange={handleChange}\n          error={hasError}\n          type=\"number\"\n          name={WeeklyContract.YahooLeagueId}\n          helperText={errors[WeeklyContract.YahooLeagueId]}\n          value={values[WeeklyContract.YahooLeagueId]}\n          fullWidth\n          InputLabelProps={{ shrink: true }}\n        />\n        <div style={{ marginLeft: \"4px\" }} />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"default\"\n          disabled={isSubmitting}\n        >\n          Search\n        </Button>\n      </form>\n      {props.status !== undefined && (\n        <Typography color=\"error\">\n          {props.status.message || \"Please try again.\"}\n        </Typography>\n      )}\n    </>\n  );\n};\n\nexport default withFormik({\n  mapPropsToValues: (props) => {\n    return {\n      [WeeklyContract.YahooLeagueId]: 0,\n    };\n  },\n  validate: () => {},\n  handleSubmit,\n})(SearchContracts);\n","import React from \"react\";\nimport { withFormik, FormikProps } from \"formik\";\nimport Button from \"@material-ui/core/Button\";\nimport { TextField, Typography } from \"@material-ui/core\";\nimport { FormSpacer } from \"../index\";\nimport { TeamProperties, ContractType } from \"../types.model\";\nimport { TeamFormValues, TeamForm, TeamFormActions } from \"./TeamForm.model\";\nimport { number, object } from \"yup\";\n\nconst handleSubmit = async (\n  values: TeamFormValues,\n  actions: TeamFormActions\n) => {\n  const { contract, accounts, web3 } = actions.props;\n\n  actions.setSubmitting(true);\n\n  const inEther = values[TeamProperties.BuyInAmount].toString();\n  const inWei = web3.utils.toWei(inEther, \"ether\");\n\n  try {\n    await contract.methods.addTeam(values[TeamProperties.TeamId]).send({\n      value: inWei,\n      from: accounts[0],\n    });\n    actions.setStatus(undefined);\n  } catch (error) {\n    actions.setStatus(error);\n  }\n\n  actions.setSubmitting(false);\n};\n\nfunction RenderTeamForm(props: TeamForm & FormikProps<TeamFormValues>) {\n  const {\n    handleChange,\n    handleSubmit,\n    values,\n    errors,\n    isSubmitting,\n    contractType,\n    touched,\n    setFieldTouched,\n  } = props;\n\n  const contractColor =\n    contractType === ContractType.Weekly ? \"secondary\" : \"primary\";\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormSpacer>\n        <TextField\n          color={contractColor}\n          label=\"Team Id\"\n          onChange={handleChange}\n          type=\"number\"\n          name={TeamProperties.TeamId}\n          onBlur={() => setFieldTouched(TeamProperties.TeamId)}\n          helperText={errors[TeamProperties.TeamId]}\n          error={\n            touched[TeamProperties.TeamId] &&\n            typeof errors[TeamProperties.TeamId] === \"string\"\n          }\n          value={values[TeamProperties.TeamId]}\n          InputLabelProps={{ shrink: true }}\n          fullWidth\n        />\n      </FormSpacer>\n      <FormSpacer>\n        <TextField\n          color={contractColor}\n          label=\"Buy In Amount (Ether)\"\n          disabled // why would they need to increase this right now?\n          onBlur={() => setFieldTouched(TeamProperties.BuyInAmount)}\n          onChange={handleChange}\n          type=\"number\"\n          name={TeamProperties.BuyInAmount}\n          value={values[TeamProperties.BuyInAmount]}\n          error={\n            touched[TeamProperties.BuyInAmount] &&\n            typeof errors[TeamProperties.BuyInAmount] === \"string\"\n          }\n          helperText={errors[TeamProperties.BuyInAmount]}\n          InputLabelProps={{ shrink: true }}\n          fullWidth\n        />\n      </FormSpacer>\n      {props.status !== undefined && (\n        <Typography color=\"error\">\n          {props.status.message || \"Please try again.\"}\n        </Typography>\n      )}\n      <FormSpacer>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color={contractColor}\n          disabled={isSubmitting}\n        >\n          Add Team\n        </Button>\n      </FormSpacer>\n    </form>\n  );\n}\n\nexport default withFormik<TeamForm, TeamFormValues>({\n  mapPropsToValues: (props) => {\n    return {\n      [TeamProperties.TeamId]: props.initialTeamId || 0,\n      [TeamProperties.BuyInAmount]: props.initialBuyInAmount || 0,\n    };\n  },\n  validationSchema: ({ initialBuyInAmount }: TeamForm) => {\n    return object().shape({\n      [TeamProperties.TeamId]: number().required(\"Required\"),\n      [TeamProperties.BuyInAmount]: number()\n        .required(\"Required\")\n        .positive(\"Must be an integer\")\n        .min(initialBuyInAmount || 0, \"Not enough ether\"),\n    });\n  },\n  handleSubmit,\n})(RenderTeamForm);\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport SeasonLeagueJSON from \"../../contracts/SeasonLeague.json\";\nimport WeeklyLeagueJSON from \"../../contracts/WeeklyLeague.json\";\nimport {\n  Web3FactoryAccounts,\n  Web3ContractAccounts,\n  WeeklyLeagueInstance,\n  SeasonLeagueInstance,\n  ContractType,\n} from \"../types.model\";\nimport { Typography } from \"@material-ui/core\";\nimport { getContractInstance } from \"../../utils/getContractInstance\";\nimport {\n  TeamForm,\n  TwoGridWrapper,\n  SelectWeeklyWinner,\n  SelectSeasonWinner,\n  ContractLoadingCard,\n  GridItem,\n  CardWrapper,\n  InlineTypography,\n  LoadManagersButton,\n  Leaderboard,\n} from \"../index\";\nimport {\n  useGasEstimation,\n  useManagerList,\n  useContractInfo,\n  useWeeklyContractInfo,\n  useSeasonContractInfo,\n} from \"./contractPageHooks\";\n\n// todo\n// make two columns - X\n// add color to forms based on contract type - X\n// remove input fields - X\n// fix colors in leaderboard card - put color at top of page? - X\n// sort leaderboard by amount won - X\n// add something for if they try to load teams and none are ther eyet - X\n// add home page link on commish heading - X\n// add validation to main forms - X\n// add season/weekly winner - X\n// get weekly specific contract variables (current week) - create a hook - X\n// refactor App architecture (theme, factory contract, router, container, header) - X\n// Build out contract wrapper - or HOC? - X\n// 404 page in the switch - X\n// try catch around submitting form and display the errors on form - X\n// add \"this is a lot of money\" on league buy in - X\n// pick winner on season doesn't update amount won... - X\n// make better manager list - X\n// make 2nd and 3rd in season - X\n// refactor variable names in payout season from _yahooLeagueId to first place - X\n// Add tests for season payout - X\n// Season contract - Make second/third options... make sure you can pay out without 2-3 places - X\n\n// Season contract has already been paid variable and numAwards are working... - X\n// P cannot appear as a descendant of P - X\n// route to page after submitting... - We'd have to make an event... not possible with TX info\n// make interface for primary/secondary colors - X\n// change load team button content - X\n// break out better manager list - X\n// remove lint errors\n// remove logs\n\n// edit weekly variables, don't create a new contract instance...\n// edit team attributes - No\n// Deploy\n\nconst ContractPageWrapper: React.FC<Web3FactoryAccounts> = (props) => {\n  const { web3 } = props;\n  const { contractType, contractAddress } = useParams();\n\n  const artifact =\n    contractType === ContractType.Season ? SeasonLeagueJSON : WeeklyLeagueJSON;\n\n  const [contract, setContract] = useState<\n    WeeklyLeagueInstance | SeasonLeagueInstance\n  >();\n\n  useEffect(() => {\n    const instance = getContractInstance(web3, artifact, contractAddress);\n    if (instance) {\n      setContract(() => instance);\n    } else {\n      return setContract(() => undefined);\n    }\n  }, [web3, artifact, contractAddress]);\n\n  if (!contract) {\n    return <ContractLoadingCard />;\n  }\n\n  return (\n    <ContractPage {...props} contractType={contractType} contract={contract} />\n  );\n};\n\nconst ContractPage: React.FC<Web3ContractAccounts & {\n  contractType: ContractType;\n}> = (props) => {\n  const { contract, web3, accounts, contractType } = props;\n  const [hasTried, setHasTried] = useState(false);\n  const managers = useManagerList(contract);\n  const estimatedGas = useGasEstimation(contract);\n\n  const {\n    maxTeams,\n    currentTeams,\n    minBuyInWei,\n    commish,\n    // yahooLeagueId,\n  } = useContractInfo(contract!, web3);\n\n  const isWeekly = contractType === ContractType.Weekly;\n  const color = isWeekly ? \"secondary\" : \"primary\";\n\n  const { currentWeek, totalWeeks } = useWeeklyContractInfo(\n    contract!,\n    contractType\n  );\n\n  const { numAwards, isSeasonDone } = useSeasonContractInfo(\n    contract!,\n    contractType\n  );\n\n  const isCommish = commish === accounts[0];\n  const remainingTeamsAvailable = maxTeams - currentTeams;\n\n  const getManagers = async () => {\n    await contract!.methods.getAllTeams().send({\n      from: accounts[0],\n      gasPrice: \"1000000\",\n    });\n    setHasTried(true);\n  };\n\n  return (\n    <TwoGridWrapper>\n      {/* left */}\n      <GridItem>\n        {isWeekly && (\n          <CardWrapper>\n            <InlineTypography\n              color={color}\n              label=\"Current Week:\"\n              value={currentWeek}\n            />\n            <InlineTypography\n              color={color}\n              label=\"Total Weeks:\"\n              value={totalWeeks}\n            />\n          </CardWrapper>\n        )}\n        {managers.length === 0 && (\n          <CardWrapper>\n            <LoadManagersButton\n              estimatedGas={estimatedGas}\n              color={color}\n              handleClick={getManagers}\n              isCommish={isCommish}\n            />\n          </CardWrapper>\n        )}\n        {isSeasonDone && (\n          <CardWrapper>\n            <Typography variant=\"h6\" color=\"error\">\n              Contract is complete!\n            </Typography>\n          </CardWrapper>\n        )}\n        {hasTried && managers.length === 0 && (\n          <CardWrapper>\n            <Typography color=\"error\">No Managers Yet!</Typography>\n          </CardWrapper>\n        )}\n        {managers.length > 0 && (\n          <CardWrapper>\n            <Typography variant=\"h6\">Managers</Typography>\n            <Leaderboard managers={managers} color={color} web3={web3} />\n          </CardWrapper>\n        )}\n      </GridItem>\n      {/* right */}\n      {remainingTeamsAvailable > 0 && !isSeasonDone && (\n        <GridItem>\n          {minBuyInWei > 0 && (\n            <CardWrapper>\n              <Typography variant=\"h6\">Add New Team</Typography>\n              <TeamForm\n                {...props}\n                initialBuyInAmount={minBuyInWei}\n                contract={contract}\n                contractType={contractType}\n              />\n            </CardWrapper>\n          )}\n          {isCommish && managers.length > 0 && isWeekly && (\n            <CardWrapper>\n              <Typography variant=\"h6\">Pick Weekly Winner</Typography>\n              <SelectWeeklyWinner\n                {...props}\n                color={color}\n                managers={managers}\n              />\n            </CardWrapper>\n          )}\n          {isCommish && managers.length > 0 && !isWeekly && (\n            <CardWrapper>\n              <Typography variant=\"h6\">Pick Season Winners</Typography>\n              <SelectSeasonWinner\n                {...props}\n                color={color}\n                managers={managers}\n                numAwards={numAwards}\n              />\n            </CardWrapper>\n          )}\n          {/* cant edit a contract yet */}\n          {/* {isCommish && yahooLeagueId > 0 && (\n            <CardWrapper>\n              <Typography variant=\"h6\">Edit League</Typography>\n              <ContractForm\n                {...props}\n                initialYahooId={yahooLeagueId}\n                initialTeamLimit={maxTeams}\n                initialMinBuyInWei={minBuyInWei}\n                contractType={contractType}\n              />\n            </CardWrapper>\n          )} */}\n        </GridItem>\n      )}\n    </TwoGridWrapper>\n  );\n};\n\nexport default ContractPageWrapper;\n","import { useState, useEffect } from \"react\";\nimport {\n  WeeklyLeagueInstance,\n  SeasonLeagueInstance,\n  ContractType,\n  TeamInfo,\n} from \"../types.model\";\nimport Web3 from \"web3/types\";\n\nexport const useManagerList = (\n  contract: SeasonLeagueInstance | WeeklyLeagueInstance\n) => {\n  const [managers, setManagers] = useState<TeamInfo[]>([]);\n  useEffect(() => {\n    // todo - figure out how to unmount this listener\n    // occasionally it causes a memory leak\n    const mountTeamEventListener = async () => {\n      contract!.events.TeamInfo().on(\"data\", async (evt: any) => {\n        const { amountPaidInWei, amountWonInWei, teamId } = evt.returnValues;\n        setManagers((prev) => {\n          return [...prev, { amountPaidInWei, amountWonInWei, teamId }];\n        });\n      });\n    };\n    mountTeamEventListener();\n  }, [contract]);\n\n  return managers;\n};\n\nexport const useGasEstimation = (\n  contract: SeasonLeagueInstance | WeeklyLeagueInstance\n) => {\n  const [estimatedGas, setEstimatedGas] = useState<number>(0);\n\n  useEffect(() => {\n    const getGas = async () => {\n      const estimate = await contract!.methods.getAllTeams().estimateGas();\n      setEstimatedGas(estimate);\n    };\n    getGas();\n    // console.log(\"useGasEstimation\");\n    // return () => setEstimatedGas(0);\n  }, [contract]);\n\n  return estimatedGas;\n};\n\nexport const useContractInfo = (\n  contract: SeasonLeagueInstance | WeeklyLeagueInstance,\n  web3: Web3\n) => {\n  const [maxTeams, setMaxTeams] = useState(0);\n  const [currentTeams, setCurrentTeams] = useState(0);\n  const [minBuyInWei, setMinBuyInWei] = useState(0);\n  const [commish, setCommish] = useState(\"\");\n  const [yahooLeagueId, setYahooLeagueId] = useState(0);\n\n  useEffect(() => {\n    const getContractInfo = async () => {\n      const [min, max, curr, comm, lid] = await Promise.all([\n        contract.methods.minBuyInWei().call(),\n        contract.methods.maxTeams().call(),\n        contract.methods.currentTeams().call(),\n        contract.methods.commish().call(),\n        contract.methods.yahooLeagueId().call(),\n      ]);\n\n      setMaxTeams(parseInt(max, 10));\n      setCurrentTeams(parseInt(curr, 10));\n      const minBuyInEth = web3.utils.fromWei(min, \"ether\");\n      setMinBuyInWei(parseInt(minBuyInEth, 10));\n      setCommish(comm);\n      setYahooLeagueId(Number(lid));\n    };\n\n    getContractInfo();\n    // console.log(\"useContractInfo\");\n    // return () => {\n    //   setMaxTeams(0);\n    //   setCurrentTeams(0);\n    //   setMinBuyInWei(0);\n    //   setCommish(\"\");\n    //   setYahooLeagueId(0);\n    // };\n  }, [contract, web3]);\n\n  return {\n    maxTeams,\n    currentTeams,\n    minBuyInWei,\n    commish,\n    yahooLeagueId,\n  };\n};\n\nexport const useWeeklyContractInfo = (\n  contract: SeasonLeagueInstance | WeeklyLeagueInstance,\n  contractType: ContractType\n) => {\n  const [totalWeeks, setTotalWeeks] = useState(0);\n  const [currentWeek, setCurrentWeek] = useState(0);\n  useEffect(() => {\n    const getWeeklyContractInfo = async () => {\n      const [tw, cw] = await Promise.all([\n        (contract as WeeklyLeagueInstance).methods.totalWeeks().call(),\n        (contract as WeeklyLeagueInstance).methods.currentWeek().call(),\n      ]);\n      setTotalWeeks(parseInt(tw, 10));\n      setCurrentWeek(parseInt(cw, 10));\n    };\n    if (contractType === ContractType.Weekly) {\n      getWeeklyContractInfo();\n    }\n    // console.log(\"useWeeklyContractInfo\");\n    // return () => {\n    //   setTotalWeeks(0);\n    //   setCurrentWeek(0);\n    // };\n  }, [contract, contractType]);\n  return { totalWeeks, currentWeek };\n};\n\nexport const useSeasonContractInfo = (\n  contract: SeasonLeagueInstance | WeeklyLeagueInstance,\n  contractType: ContractType\n) => {\n  const [numAwards, setNumAwards] = useState(0);\n  const [isSeasonDone, setIsSeasonDone] = useState(false);\n  useEffect(() => {\n    const getSeasonContractInfo = async () => {\n      const [nw, isd] = await Promise.all([\n        (contract as SeasonLeagueInstance).methods.numAwards().call(),\n        (contract as SeasonLeagueInstance).methods.isSeasonDone().call(),\n      ]);\n      setNumAwards(parseInt(nw, 10));\n      setIsSeasonDone(isd);\n    };\n    if (contractType === ContractType.Season) {\n      getSeasonContractInfo();\n    }\n    // console.log(\"useSeasonContractInfo\");\n    // return () => {\n    //   setNumAwards(0);\n    //   setIsSeasonDone(false);\n    // };\n  }, [contract, contractType]);\n  return { numAwards, isSeasonDone };\n};\n","import React, { useState } from \"react\";\nimport { Web3FactoryAccounts } from \"../types.model\";\nimport {\n  ContractForm,\n  SelectContractType,\n  ContractCard,\n  GridCardItem,\n  SearchContracts,\n  TwoGridWrapper,\n} from \"../index\";\nimport { ContractType } from \"../types.model\";\nimport { PossibleAddresses } from \"./HomePage.model\";\n\nconst HomePage: React.FC<Web3FactoryAccounts> = (props) => {\n  const [contracts, setContracts] = useState<PossibleAddresses>({\n    season: null,\n    weekly: null,\n  });\n  const [contractType, setContractType] = useState<ContractType | null>(null);\n  const [leagueId, setLeagueId] = useState<number | null>(null);\n\n  return (\n    <TwoGridWrapper>\n      <GridCardItem>\n        <>\n          <h3>Search Existing Contracts</h3>\n          <SearchContracts\n            {...props}\n            setLeagueId={setLeagueId}\n            setContracts={setContracts}\n          />\n        </>\n      </GridCardItem>\n      {(contracts.season || contracts.weekly) && leagueId && (\n        <>\n          {contracts.season && (\n            <GridCardItem>\n              <ContractCard\n                contractType={ContractType.Season}\n                contractAddress={contracts.season}\n                leagueId={leagueId}\n              />\n            </GridCardItem>\n          )}\n\n          {contracts.weekly && leagueId && (\n            <GridCardItem>\n              <ContractCard\n                contractType={ContractType.Weekly}\n                contractAddress={contracts.weekly}\n                leagueId={leagueId}\n              />\n            </GridCardItem>\n          )}\n        </>\n      )}\n      {!contracts.season && !contracts.weekly && (\n        <>\n          <GridCardItem>\n            <h3>New Contract</h3>\n            <SelectContractType\n              setValue={(val) => setContractType(val)}\n              value={contractType}\n            />\n            {contractType && (\n              <ContractForm contractType={contractType} {...props} />\n            )}\n          </GridCardItem>\n        </>\n      )}\n    </TwoGridWrapper>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    backgroundImage:\n      \"url('https://images.unsplash.com/photo-1512433082661-5bc04168befc?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1800&q=80')\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    minHeight: \"100vh\",\n  },\n});\n\nconst AppWrapper: React.FC = (props) => {\n  const styles = useStyles();\n  return (\n    <div className={styles.root}>\n      <Container maxWidth=\"md\" fixed>\n        <>\n          {props.children || (\n            <div style={{ backgroundColor: \"red\" }}>Container Error</div>\n          )}\n        </>\n      </Container>\n    </div>\n  );\n};\n\nexport default AppWrapper;\n","import React from \"react\";\nimport { OneGridWrapper } from \"../index\";\n\nimport { Typography, Card, CardContent, Link } from \"@material-ui/core\";\n\nconst LoadingError: React.FC = () => (\n  <OneGridWrapper>\n    <Card>\n      <CardContent>\n        <Typography variant=\"h4\" color=\"error\">\n          Failed to load web3, accounts, or contract.\n        </Typography>\n        <Typography variant=\"h6\">\n          {`If you do not have Web3 enabled: `}\n          <Link\n            variant=\"h6\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://metamask.io/download.html\"\n          >\n            Download MetaMask here\n          </Link>\n        </Typography>\n        <Typography variant=\"h6\">\n          If you do have Web3 enabled, please open up the console to check for\n          errors\n        </Typography>\n      </CardContent>\n    </Card>\n  </OneGridWrapper>\n);\n\nexport default LoadingError;\n","import React from \"react\";\nimport { CardContent } from \"@material-ui/core\";\n\nconst FormSpacer: React.FC = ({ children }) => {\n  return (\n    <CardContent style={{ paddingLeft: 0, paddingRight: 0 }}>\n      {children}\n    </CardContent>\n  );\n};\n\nexport default FormSpacer;\n","import React from \"react\";\nimport { TeamInfo, Colors } from \"../types.model\";\nimport { Typography } from \"@material-ui/core\";\nimport Web3 from \"web3\";\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Avatar,\n} from \"@material-ui/core\";\n\ninterface ILeaderboard {\n  managers: Array<TeamInfo>;\n  web3: Web3;\n  color: Colors;\n}\n\nconst Leaderboard: React.FC<ILeaderboard> = ({ managers, web3, color }) => {\n  return (\n    <List>\n      {managers.map((m, i) => {\n        const amountWon = web3.utils.fromWei(m.amountWonInWei, \"ether\");\n        const amountPaid = web3.utils.fromWei(m.amountPaidInWei, \"ether\");\n        const diff = Number(amountWon) - Number(amountPaid);\n        const isPos = diff > 0;\n        const fixedDiff = diff.toFixed(2);\n        return (\n          <ListItem\n            key={`listitem-${i}`}\n            style={{\n              paddingLeft: 0,\n              borderBottom: `1px solid grey`,\n            }}\n          >\n            <ListItemIcon>\n              <Avatar>{i + 1}</Avatar>\n            </ListItemIcon>\n            <ListItemText\n              primary={\n                <Typography color={color}>\n                  {`${m.teamId} `}\n                  <Typography\n                    display=\"inline\"\n                    component=\"span\"\n                    style={{ color: isPos ? \"green\" : \"red\" }}\n                  >{`${isPos ? \"+\" : \"\"}${fixedDiff} Eth`}</Typography>\n                </Typography>\n              }\n              secondary={\n                <>\n                  <Typography variant=\"caption\" display=\"inline\">\n                    {`Won: ${Number(amountWon).toFixed(2)}`}\n                  </Typography>\n                  <Typography\n                    variant=\"caption\"\n                    style={{ marginLeft: \"4px\" }}\n                    display=\"inline\"\n                  >\n                    {`Paid: ${Number(amountPaid).toFixed(2)}`}\n                  </Typography>\n                </>\n              }\n            />\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default Leaderboard;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Typography } from \"@material-ui/core\";\nimport { ContractType } from \"../types.model\";\n\nconst ContractCard: React.FC<{\n  contractAddress: string;\n  contractType: ContractType;\n  leagueId: number;\n}> = ({ contractAddress, contractType, leagueId }) => {\n  const isSeasonContract = contractType === ContractType.Season;\n\n  return (\n    <>\n      <h3>Contract Found!</h3>\n      <Link to={`/league/${leagueId}`} style={{ textDecoration: \"none\" }}>\n        <Typography variant=\"caption\" style={{ color: \"white\" }}>\n          League Page:\n        </Typography>\n        <Typography noWrap color={isSeasonContract ? \"primary\" : \"secondary\"}>\n          {leagueId}\n        </Typography>\n      </Link>\n      <Link\n        to={`/contract/${contractType}/${contractAddress}`}\n        style={{ textDecoration: \"none\" }}\n      >\n        <Typography variant=\"caption\" style={{ color: \"white\" }}>\n          Contract Page:\n        </Typography>\n        <Typography\n          variant=\"subtitle1\"\n          noWrap\n          color={isSeasonContract ? \"primary\" : \"secondary\"}\n        >\n          {contractAddress}\n        </Typography>\n      </Link>\n    </>\n  );\n};\n\nexport default ContractCard;\n","import React from \"react\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\ndeclare module \"@material-ui/core/styles/createMuiTheme\" {\n  interface ThemeOptions {\n    [key: string]: any; //\n  }\n}\n\nconst darkTheme = createMuiTheme({\n  props: {\n    MuiButtonBase: {\n      disableRipple: true,\n      disableTouchRipple: true,\n    },\n  },\n  palette: {\n    type: \"dark\",\n    primary: { main: \"#db9402\" },\n    secondary: { main: \"#db9402\" },\n    // secondary: { main: \"#027F84\" }, // teal\n    // secondary: { main: \"#4c658c\" }, // blue from gas station\n  },\n});\n\nconst ThemeWrapper: React.FC = ({ children }) => (\n  <ThemeProvider theme={darkTheme}>\n    <CssBaseline />\n    {children}\n  </ThemeProvider>\n);\n\nexport default ThemeWrapper;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nconst CardPageInlineTypography: React.FC<{\n  color: \"primary\" | \"secondary\";\n  label: string | number;\n  value: string | number;\n}> = ({ color, label, value }) => {\n  return (\n    <Typography>\n      {`${label} `}\n      <Typography display=\"inline\" component=\"span\" color={color}>\n        {value}\n      </Typography>\n    </Typography>\n  );\n};\n\nexport default CardPageInlineTypography;\n","import React from \"react\";\nimport { Button, Typography } from \"@material-ui/core\";\n\ninterface ILoadManagersButton {\n  estimatedGas: number;\n  color: \"primary\" | \"secondary\";\n  handleClick: () => void;\n  isCommish: boolean;\n}\n\nfunction LoadManagersButton(props: ILoadManagersButton) {\n  const { estimatedGas, color, handleClick, isCommish } = props;\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n      <Button color={color} variant=\"contained\" onClick={handleClick}>\n        {isCommish ? \"Load Commish Tools\" : \"Load Leaderboard\"}\n      </Button>\n      {estimatedGas > 0 && (\n        <Typography variant=\"caption\">{`(Estimated Gas Cost: ${estimatedGas.toString()} Wei)`}</Typography>\n      )}\n    </div>\n  );\n}\n\nexport default LoadManagersButton;\n","import React from \"react\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { ContractType } from \"../types.model\";\nimport { InputLabel, Typography, useTheme } from \"@material-ui/core\";\n\nconst SelectContractType: React.FC<{\n  setValue: (value: ContractType) => void;\n  value: ContractType | null;\n}> = ({ setValue, value }) => {\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const val = (event.target as HTMLInputElement).value;\n    if (val === ContractType.Weekly || val === ContractType.Season) {\n      setValue(val);\n    }\n  };\n\n  const theme = useTheme();\n\n  return (\n    <FormControl component=\"fieldset\">\n      <InputLabel\n        shrink={true}\n        color={value === ContractType.Weekly ? \"secondary\" : \"primary\"}\n        htmlFor=\"select-contract-type\"\n      >\n        Contract Type\n      </InputLabel>\n      <RadioGroup\n        style={{ marginTop: theme.spacing(2) }}\n        id=\"select-contract-type\"\n        aria-label=\"contractType\"\n        name=\"contractType\"\n        value={value}\n        onChange={handleChange}\n        row\n      >\n        <FormControlLabel\n          labelPlacement=\"start\"\n          value={ContractType.Season}\n          control={<Radio color=\"primary\" />}\n          label={<Typography variant=\"caption\">Season</Typography>}\n          style={{ marginLeft: 0 }}\n        />\n        <FormControlLabel\n          labelPlacement=\"start\"\n          value={ContractType.Weekly}\n          control={<Radio color=\"secondary\" />}\n          label={<Typography variant=\"caption\">Weekly</Typography>}\n        />\n      </RadioGroup>\n    </FormControl>\n  );\n};\n\nexport default SelectContractType;\n","import React from \"react\";\nimport { TeamProperties, WeeklyLeagueInstance } from \"../types.model\";\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  Button,\n} from \"@material-ui/core/\";\nimport { withFormik, FormikProps } from \"formik\";\nimport {\n  ISelectWeeklyWinnerValues,\n  ISelectWeeklyWinner,\n  ISelectWeeklyWinnerActions,\n} from \"./SelectWeeklyWinner.model\";\nimport { object, string } from \"yup\";\n\nconst handleSubmit = async (\n  values: ISelectWeeklyWinnerValues,\n  actions: ISelectWeeklyWinnerActions\n) => {\n  const { contract, accounts } = actions.props;\n  actions.setSubmitting(true);\n  const teamId = parseInt(values[TeamProperties.TeamId], 10);\n\n  try {\n    await (contract as WeeklyLeagueInstance).methods.payOutWeek(teamId).send({\n      from: accounts[0],\n    });\n    actions.setStatus(undefined);\n  } catch (error) {\n    actions.setStatus(error);\n  }\n\n  actions.setSubmitting(false);\n};\n\nfunction SelectWinner(\n  props: ISelectWeeklyWinner & FormikProps<ISelectWeeklyWinnerValues>\n) {\n  const { color, handleChange, submitForm, managers, values } = props;\n  return (\n    <form>\n      <FormControl fullWidth>\n        <InputLabel color={color} id=\"pick-winner\">\n          Team Id\n        </InputLabel>\n        <Select\n          id=\"pick-winner\"\n          color={color}\n          autoWidth\n          name={TeamProperties.TeamId}\n          value={values[TeamProperties.TeamId]}\n          onChange={handleChange}\n        >\n          {managers.map((manager) => {\n            return (\n              <MenuItem key={manager.teamId} value={manager.teamId}>\n                {manager.teamId}\n              </MenuItem>\n            );\n          })}\n        </Select>\n        <Button\n          onClick={submitForm}\n          variant=\"contained\"\n          color={color}\n          style={{ marginTop: \"8px\" }}\n        >\n          Submit\n        </Button>\n      </FormControl>\n    </form>\n  );\n}\n\nexport default withFormik<ISelectWeeklyWinner, ISelectWeeklyWinnerValues>({\n  mapPropsToValues: (props) => ({\n    [TeamProperties.TeamId]: \"\",\n  }),\n  validationSchema: (props: ISelectWeeklyWinner) => {\n    return object().shape({\n      [TeamProperties.TeamId]: string().required(\"Required\"),\n    });\n  },\n  handleSubmit,\n})(SelectWinner);\n","import React from \"react\";\nimport { TeamProperties, SeasonLeagueInstance } from \"../types.model\";\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  Button,\n} from \"@material-ui/core/\";\nimport { withFormik, FormikProps } from \"formik\";\nimport {\n  ISelectSeasonWinner,\n  ISelectSeasonWinnerValues,\n  ISelectSeasonWinnerActions,\n} from \"./SelectSeasonWinner.model\";\nimport { object, string } from \"yup\";\nimport { FormSpacer } from \"../index\";\n\nconst handleSubmit = async (\n  values: ISelectSeasonWinnerValues,\n  actions: ISelectSeasonWinnerActions\n) => {\n  const { contract, accounts } = actions.props;\n  actions.setSubmitting(true);\n\n  try {\n    await (contract as SeasonLeagueInstance).methods\n      .payOutSeason([\n        values[TeamProperties.FirstPlace] || \"0\",\n        values[TeamProperties.SecondPlace] || \"0\",\n        values[TeamProperties.ThirdPlace] || \"0\",\n        values[TeamProperties.FourthPlace] || \"0\",\n      ])\n      .send({\n        from: accounts[0],\n      });\n    actions.setStatus(undefined);\n  } catch (error) {\n    actions.setStatus(error);\n  }\n\n  actions.setSubmitting(false);\n};\n\nfunction SelectSeasonWinner(\n  props: ISelectSeasonWinner & FormikProps<ISelectSeasonWinnerValues>\n) {\n  const { color, handleChange, submitForm, managers, values } = props;\n  return (\n    <form>\n      <FormSpacer>\n        <FormControl fullWidth>\n          <InputLabel color={color} id={TeamProperties.FirstPlace}>\n            First Place\n          </InputLabel>\n          <Select\n            id={TeamProperties.FirstPlace}\n            color={color}\n            autoWidth\n            name={TeamProperties.FirstPlace}\n            value={values[TeamProperties.FirstPlace]}\n            onChange={handleChange}\n          >\n            {managers.map((manager) => {\n              return (\n                <MenuItem key={manager.teamId} value={manager.teamId}>\n                  {manager.teamId}\n                </MenuItem>\n              );\n            })}\n          </Select>\n        </FormControl>\n      </FormSpacer>\n\n      {props.numAwards > 1 && (\n        <FormSpacer>\n          <FormControl fullWidth>\n            <InputLabel color={color} id={TeamProperties.SecondPlace}>\n              Second Place\n            </InputLabel>\n            <Select\n              id={TeamProperties.SecondPlace}\n              color={color}\n              autoWidth\n              name={TeamProperties.SecondPlace}\n              value={values[TeamProperties.SecondPlace]}\n              onChange={handleChange}\n            >\n              {managers.map((manager) => {\n                return (\n                  <MenuItem key={manager.teamId} value={manager.teamId}>\n                    {manager.teamId}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </FormSpacer>\n      )}\n\n      {props.numAwards > 2 && (\n        <FormSpacer>\n          <FormControl fullWidth>\n            <InputLabel color={color} id={TeamProperties.ThirdPlace}>\n              Third Place\n            </InputLabel>\n            <Select\n              id={TeamProperties.ThirdPlace}\n              color={color}\n              autoWidth\n              name={TeamProperties.ThirdPlace}\n              value={values[TeamProperties.ThirdPlace]}\n              onChange={handleChange}\n            >\n              {managers.map((manager) => {\n                return (\n                  <MenuItem key={manager.teamId} value={manager.teamId}>\n                    {manager.teamId}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </FormSpacer>\n      )}\n\n      {props.numAwards > 3 && (\n        <FormSpacer>\n          <FormControl fullWidth>\n            <InputLabel color={color} id={TeamProperties.FourthPlace}>\n              Fourth Place\n            </InputLabel>\n            <Select\n              id={TeamProperties.FourthPlace}\n              color={color}\n              autoWidth\n              name={TeamProperties.FourthPlace}\n              value={values[TeamProperties.FourthPlace]}\n              onChange={handleChange}\n            >\n              {managers.map((manager) => {\n                return (\n                  <MenuItem key={manager.teamId} value={manager.teamId}>\n                    {manager.teamId}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </FormSpacer>\n      )}\n\n      <Button\n        onClick={submitForm}\n        variant=\"contained\"\n        color={color}\n        style={{ marginTop: \"8px\" }}\n      >\n        Submit\n      </Button>\n    </form>\n  );\n}\n\nexport default withFormik<ISelectSeasonWinner, ISelectSeasonWinnerValues>({\n  mapPropsToValues: (props) => ({\n    [TeamProperties.FirstPlace]: \"\",\n    [TeamProperties.SecondPlace]: \"\",\n    [TeamProperties.ThirdPlace]: \"\",\n    [TeamProperties.FourthPlace]: \"\",\n  }),\n  validationSchema: (props: ISelectSeasonWinner) => {\n    return object().shape({\n      [TeamProperties.FirstPlace]: string().required(),\n      [TeamProperties.SecondPlace]:\n        props.numAwards > 1 ? string().required() : string(),\n      [TeamProperties.ThirdPlace]:\n        props.numAwards > 2 ? string().required() : string(),\n      [TeamProperties.FourthPlace]:\n        props.numAwards > 3 ? string().required() : string(),\n    });\n  },\n  handleSubmit,\n})(SelectSeasonWinner);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { AppRender } from \"./components\";\n\nReactDOM.render(<AppRender />, document.getElementById(\"root\"));\n"],"sourceRoot":""}
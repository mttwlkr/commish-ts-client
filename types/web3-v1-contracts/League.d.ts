/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import BN from "bn.js";
import { ContractOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import {
  Callback,
  PayableTransactionObject,
  NonPayableTransactionObject,
  BlockType,
  ContractEventLog,
  BaseContract
} from "./types";

interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export interface League extends BaseContract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  ): League;
  clone(): League;
  methods: {
    commish(): NonPayableTransactionObject<string>;

    minBuyInWei(): NonPayableTransactionObject<string>;

    teamAddresses(arg0: number | string): NonPayableTransactionObject<string>;

    teams(
      arg0: string
    ): NonPayableTransactionObject<{
      teamId: string;
      amountPaidInWei: string;
      amountWonInWei: string;
      0: string;
      1: string;
      2: string;
    }>;

    yahooLeagueId(): NonPayableTransactionObject<string>;

    addTeam(_teamId: number | string): PayableTransactionObject<void>;

    returnTeam(
      _team: string
    ): NonPayableTransactionObject<{
      0: string;
      1: string;
      2: string;
    }>;

    withdrawAllMoney(_to: string): NonPayableTransactionObject<void>;
  };
  events: {
    allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter;
  };
}

/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import BN from "bn.js";
import { ContractOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import {
  Callback,
  PayableTransactionObject,
  NonPayableTransactionObject,
  BlockType,
  ContractEventLog,
  BaseContract
} from "./types";

interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export interface LeagueFactory extends BaseContract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  ): LeagueFactory;
  clone(): LeagueFactory;
  methods: {
    seasonLeagues(arg0: number | string): NonPayableTransactionObject<string>;

    weeklyLeagues(arg0: number | string): NonPayableTransactionObject<string>;

    createSeasonLeague(
      _yahooLeagueId: number | string,
      _minBuyInWei: number | string,
      _teamLimit: number | string,
      _percents: (number | string)[]
    ): NonPayableTransactionObject<void>;

    createWeeklyLeague(
      _yahooLeagueId: number | string,
      _minBuyInWei: number | string,
      _totalWeeks: number | string,
      _teamLimit: number | string
    ): NonPayableTransactionObject<void>;
  };
  events: {
    allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter;
  };
}
